name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout Code
    - name: Checkout repository
      uses: actions/checkout@v2

    # 2. Install Dependencies and Test
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: pip install -r app/requirements.txt

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)/app" >> $GITHUB_ENV
      
    - name: Run tests
      run: pytest app/tests

    # 3. Build Docker Image
    - name: Build Docker image
      env:
        IMAGE_TAG: ${{ github.run_number }}    
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ env.IMAGE_TAG }} .

   # 4. Scan Image
    # - name: Run Trivy Image Scan
    #   uses: aquasecurity/trivy-action@0.28.0
    #   env:
    #     IMAGE_TAG: ${{ github.run_number }}        
    #   with:
    #     image-ref: ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ env.IMAGE_TAG }}
    #     format: table
    #     ignore-unfixed: true
    #     # exit-code: '1'
    #     # vuln-type: 'os,library'
    #     # severity: 'CRITICAL,HIGH'        

    # 5. Login to Docker
    # - name: Log in to DockerHub
    #   run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # # 6. Push to Docker Hub
    # - name: Push Docker image to DockerHub
    #   env:
    #     IMAGE_TAG: ${{ github.run_number }}      
    #   run: docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ env.IMAGE_TAG }}

    # 7. Build Helm Chart
    # - name: Build Helm Charts
    #   run: helm package helm/flask-app


